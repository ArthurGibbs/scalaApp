# https://www.playframework.com/documentation/latest/Configuration

play = {
    evolutions = {
        autoApply=true
        enabled=true
    }
    filters = {
        disabled += "play.filters.csrf.CSRFFilter"
        enabled += "play.filters.cors.CORSFilter"
        cors  = {
          pathPrefixes = ["/api"]
          allowedOrigins = ["http://localhost", "localhost", "http://localhost:5173"]
        }
    }
    http = {
        #errorHandler = play.api.http.JsonHttpErrorHandler
        errorHandler = com.cask.ErrorHandler
        secret.key="81BDE128197B2DD0C42DEA58A763130E8F410430FFA104A6B6B25B20D0806701"
        session = {
            # The cookie name
            cookieName = "PLAY_API_SESSION"

            # Whether the secure attribute of the cookie should be set to true
            secure = false

            # The max age to set on the cookie.
            # If null, the cookie expires when the user closes their browser.
            # An important thing to note, this only sets when the browser will discard the cookie.
            maxAge = null

            # Whether the HTTP only attribute of the cookie should be set to true
            httpOnly = true

            # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
            # Possible values are "lax" and "strict". If misconfigured it's set to null.
            sameSite = "lax"

            # The domain to set on the session cookie
            # If null, does not set a domain on the session cookie.
            domain = localhost

            # The max age to set on the cookie.
            # If null, the cookie expires when the user closes their browser.
            # An important thing to note, this only sets when the browser will discard the cookie.
            maxAge = null

            # The session path
            # Must start with /.
            path = ${play.http.context}

            jwt {
                # The JWT signature algorithm to use on the session cookie
                # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
                signatureAlgorithm = "HS256"

                # The time after which the session is automatically invalidated.
                # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
                expiresAfter = ${play.http.session.maxAge}

                # The amount of clock skew to accept between servers when performing date checks
                # If you have NTP or roughtime synchronizing between servers, you can enhance
                # security by tightening this value.
                clockSkew = 5 minutes

                # The claim key under which all user data is stored in the JWT.
                dataClaim = "data"
            }
        }
    }
}
play.modules.enabled += "com.cask.db.DatabaseProviderModule"
play.db.default = "app"


frontendUrl="http://localhost:80"


db.app{
    driver="org.postgresql.Driver"
    url="jdbc:postgresql://localhost:5432/app?reWriteBatchedInserts=true&prepareThreshold=1&preparedStatementCacheQueries=1024&preparedStatementCacheSizeMiB=64"
    username="app"
    password="password"
    connectionPool = disabled
    keepAliveConnection = true
}


slick.dbs.app {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://localhost:5432/app?reWriteBatchedInserts=true&prepareThreshold=1&preparedStatementCacheQueries=1024&preparedStatementCacheSizeMiB=64"
    user = "app"
    password = "password"

    maxConnections = 90
    connectionTimeout = 5000 ms
    password="postgres"
    numThreads = 10
    connectionPool = disabled
    keepAliveConnection = true
  }
}

app = {
  connectionPool = "HikariCP"
  dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
  properties = {
    serverName = "localhost"
    portNumber = "5432"
    databaseName = "app"
    user = "app"
    password = "password"
  }
  numThreads = 10
}


app {
    salt = "B0XRA450WURQOCQI1UJYIZLA6M5F5B6Z"
}

database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = 5
  }
}

mail.smtp{
    clientId=""
    clientSecret=""
    refreshToken=""
    host=smtp.gmail.com
    sender=""
}

images{
    storage.path=""
}

include "local.conf"
